# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Pre-commit

on:
  [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    # All of these steps are just setup
    - uses: actions/checkout@v2
    - name: Install conda
      run: $GITHUB_WORKSPACE/scripts/install-miniconda.sh
    - name: Set Paths
      run: |
        echo "MINICONDA_PATH=$HOME/miniconda" >> $GITHUB_ENV
        echo "OPENWPM_CONDA_PATH=$HOME/miniconda/envs/openwpm" >> $GITHUB_ENV
    - run: echo "$MINICONDA_PATH/bin" >> $GITHUB_PATH
    - run: ls "$MINICONDA_PATH"
    - id: cache
      uses: actions/cache@v2
      with:
        path: $HOME/miniconda/envs/openwpm
        key: ${{ hashFiles('environment.yaml') }}

    - name: Install.sh (cache miss)
      run: $GITHUB_WORKSPACE/install.sh
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
    - name: Install.sh (cache hit)
      if: ${{ steps.cache.outputs.cache-hit == 'true' }}
      run: |
        file $MINICONDA_PATH
        echo "$OPENWPM_CONDA_PATH" >> $MINICONDA_PATH/environments.txt
        $GITHUB_WORKSPACE/install.sh --skip-create

    - run: echo "$OPENWPM_CONDA_PATH/bin" >> $GITHUB_PATH
    # Now we have a working OpenWPM environment
    - run: pre-commit run --all


